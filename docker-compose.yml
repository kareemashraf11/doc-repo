services:
  db:
    image: postgres:15-alpine
    container_name: docrepo_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: docrepo
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: docrepo_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: docrepo_backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/docrepo
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: your-secret-key-change-this-in-production-use-strong-random-key
      DEBUG: "True"
      APP_ENV: development
      CORS_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:80,http://localhost
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: docrepo_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api

volumes:
  postgres_data:
  redis_data:
  uploads_data:

networks:
  default:
    name: docrepo_network
